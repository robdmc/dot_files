from visidata import vd, BaseSheet
import visidata
import os
import datetime
from pathlib import Path


def set_log_file():
    now = datetime.datetime.now()
    timestamp_str = now.strftime('%Y-%m-%d-%H-%M-%S')
    pid = str(os.getpid())
    log_base_name = f'vd_{timestamp_str}_pid_{pid}.vd'

    log_dir = '/tmp/visidata_logs'
    os.makedirs(log_dir, exist_ok=True)
    log_file = os.path.join(log_dir, log_base_name)
    symlink_file = os.path.join(log_dir, 'latest.vd')
    previous_symlink_file = os.path.join(log_dir, 'previous.vd')
    Path(log_file).touch(exist_ok=True)

    if os.path.lexists(symlink_file):
        previous_real_path = Path(symlink_file).resolve()
        os.unlink(symlink_file)
        if os.path.lexists(previous_symlink_file):
            os.unlink(previous_symlink_file)
        os.symlink(previous_real_path, previous_symlink_file)
    os.symlink(log_file, symlink_file)

    os.unlink(log_file)
    vd.options.cmdlog_histfile = log_file


class Ezr:
    def __init__(self):
        self.ezr = None

    def __getattr__(self, name):
        if self.ezr is None:
            import easier as ezr
            self.ezr = ezr
        return getattr(self.ezr, name)


try:
    from dateutil.parser import parse
    import numpy as np
    ezr = Ezr()
    #set_log_file()

except:  # noqa
    pass
set_log_file()

def syncSaveSheets(givenpath, *vsheets, confirm_overwrite=False):
    """
    Copy of saveSheets function, but without async stuff
    """
    filetype = givenpath.ext or options.save_filetype

    savefunc = getattr(vd, 'save_' + filetype, None) or vd.fail('no function to save as type %s' % filetype)

    if givenpath.exists() and confirm_overwrite:
        confirm("%s already exists. overwrite? " % givenpath.given)

    if not givenpath.given.endswith('/'):  # forcibly specify save individual files into directory by ending path with /
        return vd.execAsync(savefunc, givenpath, *vsheets)

    # more than one sheet; either no specific multisave for save filetype, or path ends with /

    # save as individual files in the givenpath directory
    try:
        os.makedirs(givenpath, exist_ok=True)
    except FileExistsError:
        pass

    if not givenpath.is_dir():
        vd.fail(f'cannot save multiple {filetype} sheets to non-dir')

    # get save function to call
    for vs in vsheets:
        p = Path((givenpath / vs.name).with_suffix('.'+filetype))
        savefunc(p, vs)
        #vd.execAsync(savefunc, p, vs)
    return


def gui():
    import pandas as pd
    from pandasgui import show
    import datetime
    import multiprocessing
    import time
    now = datetime.datetime.now()

    path_str = f"/tmp/{now.strftime('__visidata_gui_%Y-%m-%d_%H.%M.%S')}_pid.{os.getpid()}__.csv"

    path = visidata.path.Path(path_str)

    sheet = vd.sheet

    syncSaveSheets(path, sheet)
    is_done = False
    for nn in range(10):
        time.sleep(1)
        try:
            df = pd.read_csv(path_str)
            if len(df) == len(sheet):
                is_done = True
                break
        except:
            pass
    if is_done:
        try:
            show(df)
        finally:
            os.unlink(path_str)
            status('Returned from Pandasgui')
    else:
        status('Pandasgui timed out')



BaseSheet.addCommand('gG', 'pandasgui', 'gui()')
